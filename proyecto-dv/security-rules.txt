rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /usuarios/{usuario}  {
      allow read: if request.auth != null;
      
      allow create, update: if 
      	request.auth != null &&
        request.auth.uid == usuario;
    }
    
    match /productos/{producto} {
      allow read: if true; 
      allow create, update: if 
      get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.rol == 'admin';
    }
    
    match /chat-privado/{chat}  {
    	allow read: if 
      	request.auth != null &&
        request.auth.uid in resource.data.usuarios;
        
      allow create: if 
        request.auth != null &&
        request.auth.uid in request.resource.data.usuarios;
        
        match /mensajes/{mensaje} {
        	allow read: if
          	request.auth != null &&
            request.auth.uid in get(/databases/$(database)/documents/chat-privado/$(chat)).data.usuarios;
        	
          allow create: if
          	request.auth != null &&
            request.auth.uid in get(/databases/$(database)/documents/chat-privado/$(chat)).data.usuarios &&
            request.auth.uid == request.resource.data.enviaId;
        }
    }
    
     match /reservas/{reserva} {
      allow read, create, update: if request.auth != null;
      allow delete: if false; 
    }
    
  }
}

rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    match /usuarios/{id}/{archivo} {
      allow write: if 
      	request.auth != null && 
        request.auth.uid == id;
    }
  }
}